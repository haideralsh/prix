// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Lib from "./Lib.bs.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as JsxRuntime from "react/jsx-runtime";

function units(measurement) {
  switch (measurement) {
    case "length" :
        return Belt_Array.map(Lib.measurements.length.units, (function (unit) {
                      return JsxRuntime.jsx("option", {
                                  children: unit,
                                  value: unit
                                }, unit);
                    }));
    case "volume" :
        return Belt_Array.map(Lib.measurements.volume.units, (function (unit) {
                      return JsxRuntime.jsx("option", {
                                  children: unit,
                                  value: unit
                                }, unit);
                    }));
    case "weight" :
        return Belt_Array.map(Lib.measurements.weight.units, (function (unit) {
                      return JsxRuntime.jsx("option", {
                                  children: unit,
                                  value: unit
                                }, unit);
                    }));
    default:
      return [];
  }
}

var defaultMeasurement = "weight";

function App(props) {
  var match = React.useState(function () {
        return defaultMeasurement;
      });
  var setMeasurement = match[1];
  var measurement = match[0];
  var match$1 = React.useState(function () {
        return "";
      });
  var setTotalMeasurement = match$1[1];
  var totalMeasurement = match$1[0];
  var match$2 = React.useState(function () {
        return Lib.uom(defaultMeasurement);
      });
  var setTotalMeasurementUom = match$2[1];
  var totalMeasurementUom = match$2[0];
  var match$3 = React.useState(function () {
        return "";
      });
  var setTotalPrice = match$3[1];
  var totalPrice = match$3[0];
  var match$4 = React.useState(function () {
        return "";
      });
  var setUnitMeasurement = match$4[1];
  var unitMeasurement = match$4[0];
  var match$5 = React.useState(function () {
        return Lib.uom(defaultMeasurement);
      });
  var setUnitMeasurementUom = match$5[1];
  var unitMeasurementUom = match$5[0];
  React.useEffect((function () {
          Curry._1(setTotalMeasurementUom, (function (_prev) {
                  return Lib.uom(measurement);
                }));
          Curry._1(setUnitMeasurementUom, (function (_prev) {
                  return Lib.uom(measurement);
                }));
        }), [measurement]);
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h1", {
                              children: "prix",
                              className: "font-extrabold leading-7 text-lime-500 truncate text-3xl tracking-tight"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("label", {
                                      children: "Unit type",
                                      className: "sr-only",
                                      htmlFor: "unit type"
                                    }),
                                JsxRuntime.jsxs("select", {
                                      children: [
                                        JsxRuntime.jsx("option", {
                                              children: "Weight",
                                              value: "weight"
                                            }),
                                        JsxRuntime.jsx("option", {
                                              children: "Volume",
                                              value: "volume"
                                            }),
                                        JsxRuntime.jsx("option", {
                                              children: "Length",
                                              value: "length"
                                            })
                                      ],
                                      className: "h-full rounded-md border-0 bg-transparent py-2 pl-3 pr-7 text-gray-500 focus:ring-2 focus:ring-inset focus:ring-lime-600 sm:text-sm",
                                      id: "unit-type",
                                      name: "unit-type",
                                      value: measurement,
                                      onChange: (function (e) {
                                          Curry._1(setMeasurement, e.target.value);
                                        })
                                    })
                              ],
                              className: "inset-y-0 right-0 flex items-center"
                            })
                      ],
                      className: "flex justify-between"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("label", {
                                      children: "Total " + measurement + "",
                                      className: "block text-sm leading-6 text-gray-500 font-medium uppercase",
                                      htmlFor: "total-weight"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("input", {
                                              className: "block w-full rounded-md border-0 py-3 pl-4 pr-20 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-lime-600 sm:text-sm sm:leading-6",
                                              id: "total-weight",
                                              name: "total-weight",
                                              placeholder: "0",
                                              type: "number",
                                              value: totalMeasurement,
                                              onChange: (function (e) {
                                                  Curry._1(setTotalMeasurement, e.target.value);
                                                })
                                            }),
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx("label", {
                                                      children: "Unit",
                                                      className: "sr-only",
                                                      htmlFor: "unit"
                                                    }),
                                                JsxRuntime.jsx("select", {
                                                      children: units(measurement),
                                                      className: "h-full rounded-md border-0 bg-transparent py-0 pl-2 pr-7 text-gray-500 focus:ring-2 focus:ring-inset focus:ring-lime-600 sm:text-sm",
                                                      id: "unit",
                                                      name: "unit",
                                                      value: totalMeasurementUom,
                                                      onChange: (function (e) {
                                                          Curry._1(setTotalMeasurementUom, e.target.value);
                                                        })
                                                    })
                                              ],
                                              className: "absolute inset-y-0 right-0 flex items-center"
                                            })
                                      ],
                                      className: "relative mt-1 rounded-md"
                                    })
                              ]
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("label", {
                                      children: "Total price",
                                      className: "block text-sm leading-6 text-gray-500 font-medium uppercase",
                                      htmlFor: "total-price"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: JsxRuntime.jsx("span", {
                                                    children: "$",
                                                    className: "text-gray-500 sm:text-sm"
                                                  }),
                                              className: "pointer-events-none absolute inset-y-0 left-0 flex items-center pl-4"
                                            }),
                                        JsxRuntime.jsx("input", {
                                              className: "block w-full rounded-md border-0 py-3 pr-20 pl-8 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-lime-600 sm:text-sm sm:leading-6",
                                              id: "total-price",
                                              name: "total-price",
                                              placeholder: "0.00",
                                              type: "number",
                                              value: totalPrice,
                                              onChange: (function (e) {
                                                  Curry._1(setTotalPrice, e.target.value);
                                                })
                                            })
                                      ],
                                      className: "relative mt-1 rounded-md"
                                    })
                              ]
                            }),
                        JsxRuntime.jsx("hr", {
                              className: "mt-2"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("label", {
                                      children: "Price per",
                                      className: "block text-sm leading-6 text-gray-500 font-medium uppercase",
                                      htmlFor: "price-per"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("input", {
                                              className: "block w-full rounded-md border-0 py-3 px-4 pr-20 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-lime-600 sm:text-sm sm:leading-6",
                                              id: "price-per",
                                              name: "price-per",
                                              placeholder: "0",
                                              type: "number",
                                              value: unitMeasurement,
                                              onChange: (function (e) {
                                                  Curry._1(setUnitMeasurement, e.target.value);
                                                })
                                            }),
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx("label", {
                                                      children: "Unit weight unit of measurement",
                                                      className: "sr-only",
                                                      htmlFor: "unit-weight-uom"
                                                    }),
                                                JsxRuntime.jsx("select", {
                                                      children: units(measurement),
                                                      className: "h-full rounded-md border-0 bg-transparent py-0 pl-2 pr-7 text-gray-500 focus:ring-2 focus:ring-inset focus:ring-lime-600 sm:text-sm",
                                                      id: "unit-weight-uom",
                                                      name: "unit-weight-uom",
                                                      value: unitMeasurementUom,
                                                      onChange: (function (e) {
                                                          Curry._1(setUnitMeasurementUom, e.target.value);
                                                        })
                                                    })
                                              ],
                                              className: "absolute inset-y-0 right-0 flex items-center"
                                            })
                                      ],
                                      className: "relative mt-1 rounded-md"
                                    })
                              ]
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("span", {
                                      children: "=",
                                      className: "text-gray-500"
                                    }),
                                JsxRuntime.jsxs("h2", {
                                      children: [
                                        JsxRuntime.jsx("span", {
                                              children: "$",
                                              className: "font-light"
                                            }),
                                        Lib.calculateCostPerUnitMeasurement(measurement, totalMeasurement, totalPrice, totalMeasurementUom, unitMeasurement, unitMeasurementUom).toFixed(2)
                                      ],
                                      className: "text-2xl font-bold leading-7 text-gray-900 whitespace-nowrap"
                                    })
                              ],
                              className: "flex items-baseline justify-between"
                            })
                      ],
                      className: "flex flex-col gap-6"
                    })
              ],
              className: "flex flex-col gap-8 p-8 max-w-sm mx-auto"
            });
}

var make = App;

export {
  make ,
}
/* react Not a pure module */
